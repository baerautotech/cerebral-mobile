name: Kubernetes Manifest Validation

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'k8s/**'
      - 'infrastructure/**'
  pull_request:
    branches: [main]
    paths:
      - 'k8s/**'
      - 'infrastructure/**'

jobs:
  validate-manifests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
      
      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'
      
      - name: Setup kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: '5.0.0'
      
      - name: Validate Kubernetes manifests
        run: |
          echo "🔍 Validating Kubernetes manifests..."
          
          # Validate YAML syntax only (no cluster connection needed)
          find k8s -name "*.yaml" -o -name "*.yml" | while read file; do
            echo "Validating $file..."
            # Use kubectl --validate=false --dry-run=client to avoid needing cluster access
            if ! kubectl apply --dry-run=client --validate=false -f "$file" > /dev/null 2>&1; then
              # If that fails, at least validate YAML syntax with yq
              if ! yq eval '.' "$file" > /dev/null 2>&1; then
                echo "❌ YAML syntax validation failed for $file"
                exit 1
              else
                echo "⚠️  Skipping Kubernetes schema validation for $file (no cluster access)"
              fi
            fi
          done
          
          # Validate kustomization files
          find k8s -name "kustomization.yaml" | while read file; do
            echo "Validating kustomization $file..."
            if kustomize build "$(dirname "$file")" > /dev/null 2>&1; then
              echo "✅ Kustomization valid: $file"
            else
              echo "⚠️  Kustomization build had issues: $file"
            fi
          done
          
          echo "✅ All Kubernetes manifests have valid YAML syntax!"
      
      - name: Check Kyverno compliance
        run: |
          echo "🔍 Checking Kyverno policy compliance..."
          
          # Check for common Kyverno violations
          find k8s -name "*.yaml" -o -name "*.yml" | while read file; do
            echo "Checking Kyverno compliance for $file..."
            
            # Check for :latest tags
            if grep -q ":latest" "$file"; then
              echo "❌ Found :latest tag in $file (violates disallow-latest-tag policy)"
              exit 1
            fi
            
            # Check for :dev tags
            if grep -q ":dev" "$file"; then
              echo "❌ Found :dev tag in $file (violates disallow-dev-tag policy)"
              exit 1
            fi
            
            # Check for missing security contexts
            if grep -q "kind: Deployment" "$file" && ! grep -q "runAsNonRoot: true" "$file"; then
              echo "⚠️  Deployment in $file may be missing runAsNonRoot security context"
            fi
          done
          
          echo "✅ Kyverno compliance check passed!"

      - name: Enforce Sealed Secrets docs guard
        run: |
          chmod +x scripts/ci/check-no-vault-docs.sh
          scripts/ci/check-no-vault-docs.sh
      
      - name: Generate validation summary
        run: |
          echo "## Kubernetes Manifest Validation Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ✅ PASSED" >> $GITHUB_STEP_SUMMARY
          echo "- **Manifests Validated**: $(find k8s -name "*.yaml" -o -name "*.yml" | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "- **Kyverno Compliance**: ✅ PASSED" >> $GITHUB_STEP_SUMMARY
          echo "- **Validation Date**: $(date -u)" >> $GITHUB_STEP_SUMMARY
