name: Native App Build

on:
  push:
    branches: [main, develop]
    paths:
      - 'apps/native/**'
      - 'packages/**'
      - '.github/workflows/native-build.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'apps/native/**'
      - 'packages/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run linting checks
        uses: baerautotech/cerebral-deployment/.github/actions/run-linting@main
        with:
          language: javascript
          fix: false

  test:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.0.0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Run tests
        uses: baerautotech/cerebral-deployment/.github/actions/run-tests@main
        with:
          language: react-native
          coverage-threshold: 80

  build:
    needs: [lint, test]
    runs-on: cerebral-k8s-runners
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.0.0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Read package version
        id: version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Build Docker image and push to registry
        id: build
        uses: baerautotech/cerebral-deployment/.github/actions/build-image@main
        with:
          image-name: 'cerebral/native'
          dockerfile: 'apps/native/Dockerfile'
          context: '.'
          tags: '${{ steps.version.outputs.version }},latest'

      - name: Verify Docker image
        run: |
          echo "âœ… Native app Docker image built successfully!"
          echo "Image: ${{ steps.build.outputs.image-uri }}"
